

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon May 03 16:13:22 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0019                     _TXREG	set	25
   208  0018                     _RCSTAbits	set	24
   209  000B                     _INTCONbits	set	11
   210  0007                     _PORTC	set	7
   211  0006                     _PORTB	set	6
   212  0005                     _PORTA	set	5
   213  001A                     _RCREG	set	26
   214  000C                     _PIR1bits	set	12
   215  0098                     _TXSTAbits	set	152
   216  0099                     _SPBRG	set	153
   217  008C                     _PIE1bits	set	140
   218  008F                     _OSCCONbits	set	143
   219  0087                     _TRISCbits	set	135
   220  0086                     _TRISB	set	134
   221  0085                     _TRISA	set	133
   222  0189                     _ANSELH	set	393
   223  0188                     _ANSEL	set	392
   224                           
   225                           	psect	strings
   226  0016                     __pstrings:
   227  0016                     stringtab:
   228  0016                     __stringtab:
   229  0016                     stringcode:	
   230                           ;	String table - string pointers are 1 byte each
   231                           
   232  0016                     stringdir:
   233  0016  3000               	movlw	high stringdir
   234  0017  008A               	movwf	10
   235  0018  0804               	movf	4,w
   236  0019  0A84               	incf	4,f
   237  001A  0782               	addwf	2,f
   238  001B                     __stringbase:
   239  001B  3400               	retlw	0
   240  001C                     __end_of__stringtab:
   241  001C                     STR_2:
   242  001C  3428               	retlw	40	;'('
   243  001D  3431               	retlw	49	;'1'
   244  001E  3429               	retlw	41	;')'
   245  001F  3420               	retlw	32	;' '
   246  0020  3444               	retlw	68	;'D'
   247  0021  3465               	retlw	101	;'e'
   248  0022  3473               	retlw	115	;'s'
   249  0023  3470               	retlw	112	;'p'
   250  0024  346C               	retlw	108	;'l'
   251  0025  3465               	retlw	101	;'e'
   252  0026  3467               	retlw	103	;'g'
   253  0027  3461               	retlw	97	;'a'
   254  0028  3472               	retlw	114	;'r'
   255  0029  3420               	retlw	32	;' '
   256  002A  3463               	retlw	99	;'c'
   257  002B  3461               	retlw	97	;'a'
   258  002C  3464               	retlw	100	;'d'
   259  002D  3465               	retlw	101	;'e'
   260  002E  346E               	retlw	110	;'n'
   261  002F  3461               	retlw	97	;'a'
   262  0030  3420               	retlw	32	;' '
   263  0031  3464               	retlw	100	;'d'
   264  0032  3465               	retlw	101	;'e'
   265  0033  3420               	retlw	32	;' '
   266  0034  3463               	retlw	99	;'c'
   267  0035  3461               	retlw	97	;'a'
   268  0036  3472               	retlw	114	;'r'
   269  0037  3461               	retlw	97	;'a'
   270  0038  3463               	retlw	99	;'c'
   271  0039  3474               	retlw	116	;'t'
   272  003A  3465               	retlw	101	;'e'
   273  003B  3472               	retlw	114	;'r'
   274  003C  3465               	retlw	101	;'e'
   275  003D  3473               	retlw	115	;'s'
   276  003E  3420               	retlw	32	;' '
   277  003F  340D               	retlw	13
   278  0040  3400               	retlw	0
   279  0041                     STR_1:
   280  0041  340D               	retlw	13
   281  0042  3451               	retlw	81	;'Q'
   282  0043  3475               	retlw	117	;'u'
   283  0044  3465               	retlw	101	;'e'
   284  0045  3420               	retlw	32	;' '
   285  0046  3461               	retlw	97	;'a'
   286  0047  3463               	retlw	99	;'c'
   287  0048  3463               	retlw	99	;'c'
   288  0049  3469               	retlw	105	;'i'
   289  004A  346F               	retlw	111	;'o'
   290  004B  346E               	retlw	110	;'n'
   291  004C  3420               	retlw	32	;' '
   292  004D  3464               	retlw	100	;'d'
   293  004E  3465               	retlw	101	;'e'
   294  004F  3473               	retlw	115	;'s'
   295  0050  3465               	retlw	101	;'e'
   296  0051  3461               	retlw	97	;'a'
   297  0052  3420               	retlw	32	;' '
   298  0053  3465               	retlw	101	;'e'
   299  0054  346A               	retlw	106	;'j'
   300  0055  3465               	retlw	101	;'e'
   301  0056  3463               	retlw	99	;'c'
   302  0057  3475               	retlw	117	;'u'
   303  0058  3474               	retlw	116	;'t'
   304  0059  3461               	retlw	97	;'a'
   305  005A  3472               	retlw	114	;'r'
   306  005B  343F               	retlw	63	;'?'
   307  005C  3420               	retlw	32	;' '
   308  005D  340D               	retlw	13
   309  005E  3400               	retlw	0
   310  005F                     STR_6:
   311  005F  340D               	retlw	13
   312  0060  3456               	retlw	86	;'V'
   313  0061  3461               	retlw	97	;'a'
   314  0062  346C               	retlw	108	;'l'
   315  0063  346F               	retlw	111	;'o'
   316  0064  3472               	retlw	114	;'r'
   317  0065  3420               	retlw	32	;' '
   318  0066  3470               	retlw	112	;'p'
   319  0067  3461               	retlw	97	;'a'
   320  0068  3472               	retlw	114	;'r'
   321  0069  3461               	retlw	97	;'a'
   322  006A  3420               	retlw	32	;' '
   323  006B  3465               	retlw	101	;'e'
   324  006C  346C               	retlw	108	;'l'
   325  006D  3420               	retlw	32	;' '
   326  006E  3470               	retlw	112	;'p'
   327  006F  3475               	retlw	117	;'u'
   328  0070  3465               	retlw	101	;'e'
   329  0071  3472               	retlw	114	;'r'
   330  0072  3474               	retlw	116	;'t'
   331  0073  346F               	retlw	111	;'o'
   332  0074  3420               	retlw	32	;' '
   333  0075  3441               	retlw	65	;'A'
   334  0076  340D               	retlw	13
   335  0077  3400               	retlw	0
   336  0078                     STR_7:
   337  0078  340D               	retlw	13
   338  0079  3456               	retlw	86	;'V'
   339  007A  3461               	retlw	97	;'a'
   340  007B  346C               	retlw	108	;'l'
   341  007C  346F               	retlw	111	;'o'
   342  007D  3472               	retlw	114	;'r'
   343  007E  3420               	retlw	32	;' '
   344  007F  3470               	retlw	112	;'p'
   345  0080  3461               	retlw	97	;'a'
   346  0081  3472               	retlw	114	;'r'
   347  0082  3461               	retlw	97	;'a'
   348  0083  3420               	retlw	32	;' '
   349  0084  3465               	retlw	101	;'e'
   350  0085  346C               	retlw	108	;'l'
   351  0086  3420               	retlw	32	;' '
   352  0087  3470               	retlw	112	;'p'
   353  0088  3475               	retlw	117	;'u'
   354  0089  3465               	retlw	101	;'e'
   355  008A  3472               	retlw	114	;'r'
   356  008B  3474               	retlw	116	;'t'
   357  008C  346F               	retlw	111	;'o'
   358  008D  3420               	retlw	32	;' '
   359  008E  3442               	retlw	66	;'B'
   360  008F  340D               	retlw	13
   361  0090  3400               	retlw	0
   362  0091                     STR_3:
   363  0091  3428               	retlw	40	;'('
   364  0092  3432               	retlw	50	;'2'
   365  0093  3429               	retlw	41	;')'
   366  0094  3420               	retlw	32	;' '
   367  0095  3443               	retlw	67	;'C'
   368  0096  3461               	retlw	97	;'a'
   369  0097  346D               	retlw	109	;'m'
   370  0098  3462               	retlw	98	;'b'
   371  0099  3469               	retlw	105	;'i'
   372  009A  3461               	retlw	97	;'a'
   373  009B  3472               	retlw	114	;'r'
   374  009C  3420               	retlw	32	;' '
   375  009D  3450               	retlw	80	;'P'
   376  009E  344F               	retlw	79	;'O'
   377  009F  3452               	retlw	82	;'R'
   378  00A0  3454               	retlw	84	;'T'
   379  00A1  3441               	retlw	65	;'A'
   380  00A2  3420               	retlw	32	;' '
   381  00A3  340D               	retlw	13
   382  00A4  3400               	retlw	0
   383  00A5                     STR_4:
   384  00A5  3428               	retlw	40	;'('
   385  00A6  3433               	retlw	51	;'3'
   386  00A7  3429               	retlw	41	;')'
   387  00A8  3420               	retlw	32	;' '
   388  00A9  3443               	retlw	67	;'C'
   389  00AA  3461               	retlw	97	;'a'
   390  00AB  346D               	retlw	109	;'m'
   391  00AC  3462               	retlw	98	;'b'
   392  00AD  3469               	retlw	105	;'i'
   393  00AE  3461               	retlw	97	;'a'
   394  00AF  3472               	retlw	114	;'r'
   395  00B0  3420               	retlw	32	;' '
   396  00B1  3450               	retlw	80	;'P'
   397  00B2  344F               	retlw	79	;'O'
   398  00B3  3452               	retlw	82	;'R'
   399  00B4  3454               	retlw	84	;'T'
   400  00B5  3442               	retlw	66	;'B'
   401  00B6  340D               	retlw	13
   402  00B7  3400               	retlw	0
   403  00B8                     STR_5:
   404  00B8  340D               	retlw	13
   405  00B9  3443               	retlw	67	;'C'
   406  00BA  3461               	retlw	97	;'a'
   407  00BB  3464               	retlw	100	;'d'
   408  00BC  3465               	retlw	101	;'e'
   409  00BD  346E               	retlw	110	;'n'
   410  00BE  3461               	retlw	97	;'a'
   411  00BF  3420               	retlw	32	;' '
   412  00C0  3465               	retlw	101	;'e'
   413  00C1  346E               	retlw	110	;'n'
   414  00C2  3476               	retlw	118	;'v'
   415  00C3  3469               	retlw	105	;'i'
   416  00C4  3461               	retlw	97	;'a'
   417  00C5  3464               	retlw	100	;'d'
   418  00C6  3461               	retlw	97	;'a'
   419  00C7  340D               	retlw	13
   420  00C8  340D               	retlw	13
   421  00C9  3400               	retlw	0
   422                           
   423                           	psect	cinit
   424  000F                     start_initialization:	
   425                           ; #config settings
   426                           
   427  000F                     __initialization:
   428                           
   429                           ; Clear objects allocated to COMMON
   430  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   431  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   432  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   433  0012                     end_of_initialization:	
   434                           ;End of C runtime variable initialization code
   435                           
   436  0012                     __end_of__initialization:
   437  0012  0183               	clrf	3
   438  0013  120A  118A  28CA   	ljmp	_main	;jump to C main() function
   439                           
   440                           	psect	bssCOMMON
   441  0078                     __pbssCOMMON:
   442  0078                     _cambio:
   443  0078                     	ds	1
   444  0079                     _dato:
   445  0079                     	ds	1
   446  007A                     _estado:
   447  007A                     	ds	1
   448                           
   449                           	psect	cstackCOMMON
   450  0070                     __pcstackCOMMON:
   451  0070                     ?_configuraciones:
   452  0070                     ?_sendString:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_rutinterrupcion:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ??_rutinterrupcion:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_main:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_send1dato:	
   465                           ; 1 bytes @ 0x0
   466                           
   467                           
   468                           ; 1 bytes @ 0x0
   469  0070                     	ds	3
   470  0073                     ??_configuraciones:
   471  0073                     ??_send1dato:	
   472                           ; 1 bytes @ 0x3
   473                           
   474  0073                     send1dato@dato:	
   475                           ; 1 bytes @ 0x3
   476                           
   477                           
   478                           ; 1 bytes @ 0x3
   479  0073                     	ds	1
   480  0074                     ??_sendString:
   481                           
   482                           ; 1 bytes @ 0x4
   483  0074                     	ds	1
   484  0075                     sendString@mensaje:
   485                           
   486                           ; 1 bytes @ 0x5
   487  0075                     	ds	1
   488  0076                     ??_main:
   489                           
   490                           ; 1 bytes @ 0x6
   491  0076                     	ds	2
   492                           
   493                           	psect	maintext
   494  00CA                     __pmaintext:	
   495 ;;
   496 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   497 ;;
   498 ;; *************** function _main *****************
   499 ;; Defined at:
   500 ;;		line 64 in file "main10.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;		None
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   509 ;; Tracked objects:
   510 ;;		On entry : B00/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   514 ;;      Params:         0       0       0       0       0
   515 ;;      Locals:         0       0       0       0       0
   516 ;;      Temps:          2       0       0       0       0
   517 ;;      Totals:         2       0       0       0       0
   518 ;;Total ram usage:        2 bytes
   519 ;; Hardware stack levels required when called:    3
   520 ;; This function calls:
   521 ;;		_configuraciones
   522 ;;		_sendString
   523 ;; This function is called by:
   524 ;;		Startup code after reset
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           
   529                           ;psect for function _main
   530  00CA                     _main:
   531  00CA                     l810:	
   532                           ;incstack = 0
   533                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   534                           
   535                           
   536                           ;main10.c: 66:     configuraciones();
   537  00CA  120A  118A  2150  120A  118A  	fcall	_configuraciones
   538  00CF  2934               	goto	l858
   539  00D0                     l812:
   540                           
   541                           ;main10.c: 77:                 sendString("\rQue accion desea ejecutar? \r");
   542  00D0  3026               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   543  00D1  120A  118A  2176  120A  118A  	fcall	_sendString
   544                           
   545                           ;main10.c: 78:                 sendString("(1) Desplegar cadena de caracteres \r");
   546  00D6  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   547  00D7  120A  118A  2176  120A  118A  	fcall	_sendString
   548                           
   549                           ;main10.c: 79:                 sendString("(2) Cambiar PORTA \r");
   550  00DC  3076               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   551  00DD  120A  118A  2176  120A  118A  	fcall	_sendString
   552                           
   553                           ;main10.c: 80:                 sendString("(3) Cambiar PORTB\r");
   554  00E2  308A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   555  00E3  120A  118A  2176  120A  118A  	fcall	_sendString
   556  00E8                     l814:
   557                           
   558                           ;main10.c: 81:                 estado = 20;
   559  00E8  3014               	movlw	20
   560  00E9  00F6               	movwf	??_main
   561  00EA  0876               	movf	??_main,w
   562  00EB  00FA               	movwf	_estado
   563                           
   564                           ;main10.c: 82:                 break;
   565  00EC  2934               	goto	l858
   566  00ED                     l816:
   567                           
   568                           ;main10.c: 84:                 sendString("\rCadena enviada\r\r");
   569  00ED  309D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   570  00EE  120A  118A  2176  120A  118A  	fcall	_sendString
   571  00F3                     l818:
   572                           
   573                           ;main10.c: 85:                 dato = 0;
   574  00F3  01F9               	clrf	_dato
   575  00F4                     l820:
   576                           
   577                           ;main10.c: 86:                 estado = 0;
   578  00F4  01FA               	clrf	_estado
   579                           
   580                           ;main10.c: 87:                 break;
   581  00F5  2934               	goto	l858
   582  00F6                     l822:
   583                           
   584                           ;main10.c: 89:                 sendString("\rValor para el puerto A\r");
   585  00F6  3044               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   586  00F7  120A  118A  2176  120A  118A  	fcall	_sendString
   587  00FC                     l824:	
   588                           ;main10.c: 90:                 while(!cambio);
   589                           
   590  00FC  0878               	movf	_cambio,w
   591  00FD  1903               	btfsc	3,2
   592  00FE  2900               	goto	u101
   593  00FF  2901               	goto	u100
   594  0100                     u101:
   595  0100  28FC               	goto	l824
   596  0101                     u100:
   597  0101                     l826:
   598                           
   599                           ;main10.c: 91:                 PORTA = dato;
   600  0101  0879               	movf	_dato,w
   601  0102  1283               	bcf	3,5	;RP0=0, select bank0
   602  0103  1303               	bcf	3,6	;RP1=0, select bank0
   603  0104  0085               	movwf	5	;volatile
   604  0105  28F3               	goto	l818
   605  0106                     l832:
   606                           
   607                           ;main10.c: 96:                 sendString("\rValor para el puerto B\r");
   608  0106  305D               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   609  0107  120A  118A  2176  120A  118A  	fcall	_sendString
   610  010C                     l834:	
   611                           ;main10.c: 97:                 while(!cambio);
   612                           
   613  010C  0878               	movf	_cambio,w
   614  010D  1903               	btfsc	3,2
   615  010E  2910               	goto	u111
   616  010F  2911               	goto	u110
   617  0110                     u111:
   618  0110  290C               	goto	l834
   619  0111                     u110:
   620  0111                     l836:
   621                           
   622                           ;main10.c: 98:                 PORTB = dato;
   623  0111  0879               	movf	_dato,w
   624  0112  1283               	bcf	3,5	;RP0=0, select bank0
   625  0113  1303               	bcf	3,6	;RP1=0, select bank0
   626  0114  0086               	movwf	6	;volatile
   627  0115  28F3               	goto	l818
   628  0116                     l842:
   629                           
   630                           ;main10.c: 103:                 cambio = 0;
   631  0116  01F8               	clrf	_cambio
   632  0117                     l844:
   633                           
   634                           ;main10.c: 104:                 if(dato == '1') estado = 1;
   635  0117  3031               	movlw	49
   636  0118  0679               	xorwf	_dato,w
   637  0119  1D03               	btfss	3,2
   638  011A  291C               	goto	u121
   639  011B  291D               	goto	u120
   640  011C                     u121:
   641  011C  291F               	goto	l848
   642  011D                     u120:
   643  011D                     l846:
   644  011D  01FA               	clrf	_estado
   645  011E  0AFA               	incf	_estado,f
   646  011F                     l848:
   647                           
   648                           ;main10.c: 105:                 if(dato == '2') estado = 2;
   649  011F  3032               	movlw	50
   650  0120  0679               	xorwf	_dato,w
   651  0121  1D03               	btfss	3,2
   652  0122  2924               	goto	u131
   653  0123  2925               	goto	u130
   654  0124                     u131:
   655  0124  2929               	goto	l852
   656  0125                     u130:
   657  0125                     l850:
   658  0125  3002               	movlw	2
   659  0126  00F6               	movwf	??_main
   660  0127  0876               	movf	??_main,w
   661  0128  00FA               	movwf	_estado
   662  0129                     l852:
   663                           
   664                           ;main10.c: 106:                 if(dato == '3') estado = 3;
   665  0129  3033               	movlw	51
   666  012A  0679               	xorwf	_dato,w
   667  012B  1D03               	btfss	3,2
   668  012C  292E               	goto	u141
   669  012D  292F               	goto	u140
   670  012E                     u141:
   671  012E  2934               	goto	l56
   672  012F                     u140:
   673  012F                     l854:
   674  012F  3003               	movlw	3
   675  0130  00F6               	movwf	??_main
   676  0131  0876               	movf	??_main,w
   677  0132  00FA               	movwf	_estado
   678  0133  2934               	goto	l858
   679  0134                     l56:
   680  0134                     l858:
   681  0134  087A               	movf	_estado,w
   682  0135  00F6               	movwf	??_main
   683  0136  01F7               	clrf	??_main+1
   684                           
   685                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   686                           ; Switch size 1, requested type "simple"
   687                           ; Number of cases is 1, Range of values is 0 to 0
   688                           ; switch strategies available:
   689                           ; Name         Instructions Cycles
   690                           ; simple_byte            4     3 (average)
   691                           ; direct_byte           11     8 (fixed)
   692                           ; jumptable            260     6 (fixed)
   693                           ;	Chosen strategy is simple_byte
   694  0137  0877               	movf	??_main+1,w
   695  0138  3A00               	xorlw	0	; case 0
   696  0139  1903               	skipnz
   697  013A  293C               	goto	l884
   698  013B  2934               	goto	l56
   699  013C                     l884:
   700                           
   701                           ; Switch size 1, requested type "simple"
   702                           ; Number of cases is 5, Range of values is 0 to 20
   703                           ; switch strategies available:
   704                           ; Name         Instructions Cycles
   705                           ; simple_byte           16     9 (average)
   706                           ; direct_byte           71     8 (fixed)
   707                           ; jumptable            260     6 (fixed)
   708                           ;	Chosen strategy is simple_byte
   709  013C  0876               	movf	??_main,w
   710  013D  3A00               	xorlw	0	; case 0
   711  013E  1903               	skipnz
   712  013F  28D0               	goto	l812
   713  0140  3A01               	xorlw	1	; case 1
   714  0141  1903               	skipnz
   715  0142  28ED               	goto	l816
   716  0143  3A03               	xorlw	3	; case 2
   717  0144  1903               	skipnz
   718  0145  28F6               	goto	l822
   719  0146  3A01               	xorlw	1	; case 3
   720  0147  1903               	skipnz
   721  0148  2906               	goto	l832
   722  0149  3A17               	xorlw	23	; case 20
   723  014A  1903               	skipnz
   724  014B  2916               	goto	l842
   725  014C  2934               	goto	l56
   726  014D  120A  118A  280C   	ljmp	start
   727  0150                     __end_of_main:
   728                           
   729                           	psect	text1
   730  0176                     __ptext1:	
   731 ;; *************** function _sendString *****************
   732 ;; Defined at:
   733 ;;		line 151 in file "main10.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  mensaje         1    wreg     PTR unsigned char 
   736 ;;		 -> STR_7(25), STR_6(25), STR_5(18), STR_4(19), 
   737 ;;		 -> STR_3(20), STR_2(37), STR_1(30), 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  mensaje         1    5[COMMON] PTR unsigned char 
   740 ;;		 -> STR_7(25), STR_6(25), STR_5(18), STR_4(19), 
   741 ;;		 -> STR_3(20), STR_2(37), STR_1(30), 
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   751 ;;      Params:         0       0       0       0       0
   752 ;;      Locals:         1       0       0       0       0
   753 ;;      Temps:          1       0       0       0       0
   754 ;;      Totals:         2       0       0       0       0
   755 ;;Total ram usage:        2 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    2
   758 ;; This function calls:
   759 ;;		_send1dato
   760 ;; This function is called by:
   761 ;;		_main
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           
   766                           ;psect for function _sendString
   767  0176                     _sendString:
   768                           
   769                           ;incstack = 0
   770                           ; Regs used in _sendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   771                           ;sendString@mensaje stored from wreg
   772  0176  00F5               	movwf	sendString@mensaje
   773  0177                     l802:
   774                           
   775                           ;main10.c: 152:     while(*mensaje != 0x00){
   776  0177  2988               	goto	l808
   777  0178                     l804:
   778                           
   779                           ;main10.c: 153:         send1dato(*mensaje);
   780  0178  0875               	movf	sendString@mensaje,w
   781  0179  0084               	movwf	4
   782  017A  120A  118A  2016  120A  118A  	fcall	stringdir
   783  017F  120A  118A  21A9  120A  118A  	fcall	_send1dato
   784  0184                     l806:
   785                           
   786                           ;main10.c: 154:         mensaje ++;
   787  0184  3001               	movlw	1
   788  0185  00F4               	movwf	??_sendString
   789  0186  0874               	movf	??_sendString,w
   790  0187  07F5               	addwf	sendString@mensaje,f
   791  0188                     l808:
   792                           
   793                           ;main10.c: 152:     while(*mensaje != 0x00){
   794  0188  0875               	movf	sendString@mensaje,w
   795  0189  0084               	movwf	4
   796  018A  120A  118A  2016  120A  118A  	fcall	stringdir
   797  018F  3A00               	xorlw	0
   798  0190  1D03               	skipz
   799  0191  2993               	goto	u91
   800  0192  2994               	goto	u90
   801  0193                     u91:
   802  0193  2978               	goto	l804
   803  0194                     u90:
   804  0194                     l90:
   805  0194  0008               	return
   806  0195                     __end_of_sendString:
   807                           
   808                           	psect	text2
   809  01A9                     __ptext2:	
   810 ;; *************** function _send1dato *****************
   811 ;; Defined at:
   812 ;;		line 146 in file "main10.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  dato            1    wreg     unsigned char 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  dato            1    3[COMMON] unsigned char 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       0       0       0       0
   827 ;;      Locals:         1       0       0       0       0
   828 ;;      Temps:          0       0       0       0       0
   829 ;;      Totals:         1       0       0       0       0
   830 ;;Total ram usage:        1 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    1
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_sendString
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           
   841                           ;psect for function _send1dato
   842  01A9                     _send1dato:
   843                           
   844                           ;incstack = 0
   845                           ; Regs used in _send1dato: [wreg]
   846                           ;send1dato@dato stored from wreg
   847  01A9  00F3               	movwf	send1dato@dato
   848  01AA                     l682:
   849                           
   850                           ;main10.c: 147:     TXREG = dato;
   851  01AA  0873               	movf	send1dato@dato,w
   852  01AB  1283               	bcf	3,5	;RP0=0, select bank0
   853  01AC  1303               	bcf	3,6	;RP1=0, select bank0
   854  01AD  0099               	movwf	25	;volatile
   855  01AE                     l81:	
   856                           ;main10.c: 148:     while(!TXSTAbits.TRMT);
   857                           
   858  01AE  1683               	bsf	3,5	;RP0=1, select bank1
   859  01AF  1303               	bcf	3,6	;RP1=0, select bank1
   860  01B0  1C98               	btfss	24,1	;volatile
   861  01B1  29B3               	goto	u11
   862  01B2  29B4               	goto	u10
   863  01B3                     u11:
   864  01B3  29AE               	goto	l81
   865  01B4                     u10:
   866  01B4                     l84:
   867  01B4  0008               	return
   868  01B5                     __end_of_send1dato:
   869                           
   870                           	psect	text3
   871  0150                     __ptext3:	
   872 ;; *************** function _configuraciones *****************
   873 ;; Defined at:
   874 ;;		line 114 in file "main10.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, status,2, status,0
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   888 ;;      Params:         0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0
   890 ;;      Temps:          0       0       0       0       0
   891 ;;      Totals:         0       0       0       0       0
   892 ;;Total ram usage:        0 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    1
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_main
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           
   903                           ;psect for function _configuraciones
   904  0150                     _configuraciones:
   905  0150                     l684:	
   906                           ;incstack = 0
   907                           ; Regs used in _configuraciones: [wreg+status,2+status,0]
   908                           
   909                           
   910                           ;main10.c: 115:     ANSEL = 0X00;
   911  0150  1683               	bsf	3,5	;RP0=1, select bank3
   912  0151  1703               	bsf	3,6	;RP1=1, select bank3
   913  0152  0188               	clrf	8	;volatile
   914                           
   915                           ;main10.c: 116:     ANSELH = 0X00;
   916  0153  0189               	clrf	9	;volatile
   917                           
   918                           ;main10.c: 117:     TRISA = 0X00;
   919  0154  1683               	bsf	3,5	;RP0=1, select bank1
   920  0155  1303               	bcf	3,6	;RP1=0, select bank1
   921  0156  0185               	clrf	5	;volatile
   922                           
   923                           ;main10.c: 118:     TRISB = 0X00;
   924  0157  0186               	clrf	6	;volatile
   925  0158                     l686:
   926                           
   927                           ;main10.c: 119:     TRISCbits.TRISC6 = 0;
   928  0158  1307               	bcf	7,6	;volatile
   929  0159                     l688:
   930                           
   931                           ;main10.c: 120:     TRISCbits.TRISC7 = 1;
   932  0159  1787               	bsf	7,7	;volatile
   933                           
   934                           ;main10.c: 121:     PORTA = 0X00;
   935  015A  1283               	bcf	3,5	;RP0=0, select bank0
   936  015B  1303               	bcf	3,6	;RP1=0, select bank0
   937  015C  0185               	clrf	5	;volatile
   938                           
   939                           ;main10.c: 122:     PORTB = 0X00;
   940  015D  0186               	clrf	6	;volatile
   941                           
   942                           ;main10.c: 123:     PORTC = 0X00;
   943  015E  0187               	clrf	7	;volatile
   944                           
   945                           ;main10.c: 125:     estado = 0;
   946  015F  01FA               	clrf	_estado
   947  0160                     l690:
   948                           
   949                           ;main10.c: 128:     OSCCONbits.IRCF = 0b111;
   950  0160  3070               	movlw	112
   951  0161  1683               	bsf	3,5	;RP0=1, select bank1
   952  0162  1303               	bcf	3,6	;RP1=0, select bank1
   953  0163  048F               	iorwf	15,f	;volatile
   954  0164                     l692:
   955                           
   956                           ;main10.c: 129:     OSCCONbits.SCS = 0b1;
   957  0164  140F               	bsf	15,0	;volatile
   958  0165                     l694:
   959                           
   960                           ;main10.c: 132:     INTCONbits.GIE = 1;
   961  0165  178B               	bsf	11,7	;volatile
   962  0166                     l696:
   963                           
   964                           ;main10.c: 133:     INTCONbits.PEIE = 1;
   965  0166  170B               	bsf	11,6	;volatile
   966  0167                     l698:
   967                           
   968                           ;main10.c: 134:     PIE1bits.RCIE = 1;
   969  0167  168C               	bsf	12,5	;volatile
   970  0168                     l700:
   971                           
   972                           ;main10.c: 137:     SPBRG = 12;
   973  0168  300C               	movlw	12
   974  0169  0099               	movwf	25	;volatile
   975  016A                     l702:
   976                           
   977                           ;main10.c: 138:     TXSTAbits.BRGH = 0;
   978  016A  1118               	bcf	24,2	;volatile
   979  016B                     l704:
   980                           
   981                           ;main10.c: 139:     TXSTAbits.TXEN = 1;
   982  016B  1698               	bsf	24,5	;volatile
   983  016C                     l706:
   984                           
   985                           ;main10.c: 140:     RCSTAbits.CREN = 1;
   986  016C  1283               	bcf	3,5	;RP0=0, select bank0
   987  016D  1303               	bcf	3,6	;RP1=0, select bank0
   988  016E  1618               	bsf	24,4	;volatile
   989  016F                     l708:
   990                           
   991                           ;main10.c: 141:     TXSTAbits.SYNC = 0;
   992  016F  1683               	bsf	3,5	;RP0=1, select bank1
   993  0170  1303               	bcf	3,6	;RP1=0, select bank1
   994  0171  1218               	bcf	24,4	;volatile
   995  0172                     l710:
   996                           
   997                           ;main10.c: 142:     RCSTAbits.SPEN = 1;
   998  0172  1283               	bcf	3,5	;RP0=0, select bank0
   999  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1000  0174  1798               	bsf	24,7	;volatile
  1001  0175                     l78:
  1002  0175  0008               	return
  1003  0176                     __end_of_configuraciones:
  1004                           
  1005                           	psect	text4
  1006  0195                     __ptext4:	
  1007 ;; *************** function _rutinterrupcion *****************
  1008 ;; Defined at:
  1009 ;;		line 56 in file "main10.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;		None
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;		None
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  1    wreg      void 
  1016 ;; Registers used:
  1017 ;;		wreg
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1023 ;;      Params:         0       0       0       0       0
  1024 ;;      Locals:         0       0       0       0       0
  1025 ;;      Temps:          3       0       0       0       0
  1026 ;;      Totals:         3       0       0       0       0
  1027 ;;Total ram usage:        3 bytes
  1028 ;; Hardware stack levels used:    1
  1029 ;; This function calls:
  1030 ;;		Nothing
  1031 ;; This function is called by:
  1032 ;;		Interrupt level 1
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           
  1037                           ;psect for function _rutinterrupcion
  1038  0195                     _rutinterrupcion:
  1039  0195                     i1l720:
  1040                           
  1041                           ;main10.c: 57:     if(PIR1bits.RCIF){
  1042  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0197  1E8C               	btfss	12,5	;volatile
  1045  0198  299A               	goto	u3_21
  1046  0199  299B               	goto	u3_20
  1047  019A                     u3_21:
  1048  019A  29A2               	goto	i1l50
  1049  019B                     u3_20:
  1050  019B                     i1l722:
  1051                           
  1052                           ;main10.c: 58:         dato = RCREG;
  1053  019B  081A               	movf	26,w	;volatile
  1054  019C  00F0               	movwf	??_rutinterrupcion
  1055  019D  0870               	movf	??_rutinterrupcion,w
  1056  019E  00F9               	movwf	_dato
  1057  019F                     i1l724:
  1058                           
  1059                           ;main10.c: 59:         PIR1bits.RCIF = 0;
  1060  019F  128C               	bcf	12,5	;volatile
  1061  01A0                     i1l726:
  1062                           
  1063                           ;main10.c: 60:         cambio = 1;
  1064  01A0  01F8               	clrf	_cambio
  1065  01A1  0AF8               	incf	_cambio,f
  1066  01A2                     i1l50:
  1067  01A2  0872               	movf	??_rutinterrupcion+2,w
  1068  01A3  008A               	movwf	10
  1069  01A4  0E71               	swapf	??_rutinterrupcion+1,w
  1070  01A5  0083               	movwf	3
  1071  01A6  0EFE               	swapf	btemp,f
  1072  01A7  0E7E               	swapf	btemp,w
  1073  01A8  0009               	retfie
  1074  01A9                     __end_of_rutinterrupcion:
  1075  007E                     btemp	set	126	;btemp
  1076  007E                     wtemp0	set	126
  1077                           
  1078                           	psect	intentry
  1079  0004                     __pintentry:	
  1080                           ;incstack = 0
  1081                           ; Regs used in _rutinterrupcion: [wreg]
  1082                           
  1083  0004                     interrupt_function:
  1084  007E                     saved_w	set	btemp
  1085  0004  00FE               	movwf	btemp
  1086  0005  0E03               	swapf	3,w
  1087  0006  00F1               	movwf	??_rutinterrupcion+1
  1088  0007  080A               	movf	10,w
  1089  0008  00F2               	movwf	??_rutinterrupcion+2
  1090  0009  120A  118A  2995   	ljmp	_rutinterrupcion
  1091                           
  1092                           	psect	config
  1093                           
  1094                           ;Config register CONFIG1 @ 0x2007
  1095                           ;	Oscillator Selection bits
  1096                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1097                           ;	Watchdog Timer Enable bit
  1098                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1099                           ;	Power-up Timer Enable bit
  1100                           ;	PWRTE = OFF, PWRT disabled
  1101                           ;	RE3/MCLR pin function select bit
  1102                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1103                           ;	Code Protection bit
  1104                           ;	CP = OFF, Program memory code protection is disabled
  1105                           ;	Data Code Protection bit
  1106                           ;	CPD = OFF, Data memory code protection is disabled
  1107                           ;	Brown Out Reset Selection bits
  1108                           ;	BOREN = OFF, BOR disabled
  1109                           ;	Internal External Switchover bit
  1110                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1111                           ;	Fail-Safe Clock Monitor Enabled bit
  1112                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1113                           ;	Low Voltage Programming Enable bit
  1114                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1115                           ;	In-Circuit Debugger Mode bit
  1116                           ;	DEBUG = 0x1, unprogrammed default
  1117  2007                     	org	8199
  1118  2007  20F4               	dw	8436
  1119                           
  1120                           ;Config register CONFIG2 @ 0x2008
  1121                           ;	Brown-out Reset Selection bit
  1122                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1123                           ;	Flash Program Memory Self Write Enable bits
  1124                           ;	WRT = OFF, Write protection off
  1125  2008                     	org	8200
  1126  2008  3FFF               	dw	16383

Data Sizes:
    Strings     174
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sendString@mensaje	PTR unsigned char  size(1) Largest target is 37
		 -> STR_7(CODE[25]), STR_6(CODE[25]), STR_5(CODE[18]), STR_4(CODE[19]), 
		 -> STR_3(CODE[20]), STR_2(CODE[37]), STR_1(CODE[30]), 


Critical Paths under _main in COMMON

    _main->_sendString
    _sendString->_send1dato

Critical Paths under _rutinterrupcion in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _rutinterrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutinterrupcion in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutinterrupcion in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutinterrupcion in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     291
                                              6 COMMON     2     2      0
                    _configuraciones
                         _sendString
 ---------------------------------------------------------------------------------
 (1) _sendString                                           2     2      0     291
                                              4 COMMON     2     2      0
                          _send1dato
 ---------------------------------------------------------------------------------
 (2) _send1dato                                            1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configuraciones                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _rutinterrupcion                                      3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configuraciones
   _sendString
     _send1dato

 _rutinterrupcion (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon May 03 16:13:22 2021

                       pc 0002                        l56 0134                        l81 01AE  
                      l90 0194                        l84 01B4                        l78 0175  
                      u10 01B4                        u11 01B3                        u90 0194  
                      u91 0193                        fsr 0004                       l700 0168  
                     l710 0172                       l702 016A                       l704 016B  
                     l706 016C                       l802 0177                       l810 00CA  
                     l708 016F                       l804 0178                       l820 00F4  
                     l812 00D0                       l806 0184                       l822 00F6  
                     l814 00E8                       l808 0188                       l832 0106  
                     l824 00FC                       l816 00ED                       l690 0160  
                     l682 01AA                       l850 0125                       l842 0116  
                     l834 010C                       l826 0101                       l818 00F3  
                     l692 0164                       l684 0150                       l852 0129  
                     l844 0117                       l836 0111                       l694 0165  
                     l686 0158                       l854 012F                       l846 011D  
                     l696 0166                       l688 0159                       l848 011F  
                     l698 0167                       l858 0134                       l884 013C  
                     u100 0101                       u101 0100                       u110 0111  
                     u111 0110                       u120 011D                       u121 011C  
                     u130 0125                       u131 0124                       u140 012F  
                     u141 012E                       fsr0 0004                      STR_1 0041  
                    STR_2 001C                      STR_3 0091                      STR_4 00A5  
                    STR_5 00B8                      STR_6 005F                      STR_7 0078  
                    i1l50 01A2                      u3_20 019B                      u3_21 019A  
                    _dato 0079                      _main 00CA                      btemp 007E  
        ?_configuraciones 0070                      start 000C                     ?_main 0070  
                   _ANSEL 0188                     i1l720 0195                     i1l722 019B  
                   i1l724 019F                     i1l726 01A0                     _RCREG 001A  
                   _SPBRG 0099                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _TRISA 0085                     _TRISB 0086  
                   _TXREG 0019         ??_rutinterrupcion 0070             send1dato@dato 0073  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 000F              __end_of_main 0150                    ??_main 0076  
                  _ANSELH 0189                    _cambio 0078                    _estado 007A  
                  saved_w 007E   __end_of__initialization 0012            __pcstackCOMMON 0070  
      __size_of_send1dato 000C                __pmaintext 00CA           _rutinterrupcion 0195  
              __pintentry 0004                __stringtab 0016  __size_of_configuraciones 0026  
                 __ptext1 0176                   __ptext2 01A9                   __ptext3 0150  
                 __ptext4 0195         __end_of_send1dato 01B5      end_of_initialization 0012  
              _sendString 0176   __end_of_rutinterrupcion 01A9                 _RCSTAbits 0018  
               _TRISCbits 0087                 _TXSTAbits 0098         ??_configuraciones 0073  
     start_initialization 000F               ?_sendString 0070          ?_rutinterrupcion 0070  
             __pbssCOMMON 0078                 ___latbits 0002                 __pstrings 0016  
     __size_of_sendString 001F                 _send1dato 01A9         interrupt_function 0004  
       sendString@mensaje 0075                  _PIE1bits 008C                  _PIR1bits 000C  
             __stringbase 001B                ?_send1dato 0070           _configuraciones 0150  
      __end_of__stringtab 001C              ??_sendString 0074             __size_of_main 0086  
      __end_of_sendString 0195                _INTCONbits 000B                  intlevel1 0000  
             ??_send1dato 0073   __end_of_configuraciones 0176                 stringcode 0016  
              _OSCCONbits 008F  __size_of_rutinterrupcion 0014                  stringdir 0016  
                stringtab 0016  
