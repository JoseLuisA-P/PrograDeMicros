

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue May 04 09:42:01 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0019                     _TXREG	set	25
   208  0018                     _RCSTAbits	set	24
   209  000B                     _INTCONbits	set	11
   210  0007                     _PORTC	set	7
   211  0006                     _PORTB	set	6
   212  0005                     _PORTA	set	5
   213  001A                     _RCREG	set	26
   214  000C                     _PIR1bits	set	12
   215  0098                     _TXSTAbits	set	152
   216  0099                     _SPBRG	set	153
   217  008C                     _PIE1bits	set	140
   218  008F                     _OSCCONbits	set	143
   219  0087                     _TRISCbits	set	135
   220  0086                     _TRISB	set	134
   221  0085                     _TRISA	set	133
   222  0189                     _ANSELH	set	393
   223  0188                     _ANSEL	set	392
   224                           
   225                           	psect	strings
   226  0016                     __pstrings:
   227  0016                     stringtab:
   228  0016                     __stringtab:
   229  0016                     stringcode:	
   230                           ;	String table - string pointers are 1 byte each
   231                           
   232  0016                     stringdir:
   233  0016  3000               	movlw	high stringdir
   234  0017  008A               	movwf	10
   235  0018  0804               	movf	4,w
   236  0019  0A84               	incf	4,f
   237  001A  0782               	addwf	2,f
   238  001B                     __stringbase:
   239  001B  3400               	retlw	0
   240  001C                     __end_of__stringtab:
   241  001C                     STR_2:
   242  001C  3428               	retlw	40	;'('
   243  001D  3431               	retlw	49	;'1'
   244  001E  3429               	retlw	41	;')'
   245  001F  3420               	retlw	32	;' '
   246  0020  3444               	retlw	68	;'D'
   247  0021  3465               	retlw	101	;'e'
   248  0022  3473               	retlw	115	;'s'
   249  0023  3470               	retlw	112	;'p'
   250  0024  346C               	retlw	108	;'l'
   251  0025  3465               	retlw	101	;'e'
   252  0026  3467               	retlw	103	;'g'
   253  0027  3461               	retlw	97	;'a'
   254  0028  3472               	retlw	114	;'r'
   255  0029  3420               	retlw	32	;' '
   256  002A  3463               	retlw	99	;'c'
   257  002B  3461               	retlw	97	;'a'
   258  002C  3464               	retlw	100	;'d'
   259  002D  3465               	retlw	101	;'e'
   260  002E  346E               	retlw	110	;'n'
   261  002F  3461               	retlw	97	;'a'
   262  0030  3420               	retlw	32	;' '
   263  0031  3464               	retlw	100	;'d'
   264  0032  3465               	retlw	101	;'e'
   265  0033  3420               	retlw	32	;' '
   266  0034  3463               	retlw	99	;'c'
   267  0035  3461               	retlw	97	;'a'
   268  0036  3472               	retlw	114	;'r'
   269  0037  3461               	retlw	97	;'a'
   270  0038  3463               	retlw	99	;'c'
   271  0039  3474               	retlw	116	;'t'
   272  003A  3465               	retlw	101	;'e'
   273  003B  3472               	retlw	114	;'r'
   274  003C  3465               	retlw	101	;'e'
   275  003D  3473               	retlw	115	;'s'
   276  003E  3420               	retlw	32	;' '
   277  003F  340D               	retlw	13
   278  0040  3400               	retlw	0
   279  0041                     STR_1:
   280  0041  340D               	retlw	13
   281  0042  3451               	retlw	81	;'Q'
   282  0043  3475               	retlw	117	;'u'
   283  0044  3465               	retlw	101	;'e'
   284  0045  3420               	retlw	32	;' '
   285  0046  3461               	retlw	97	;'a'
   286  0047  3463               	retlw	99	;'c'
   287  0048  3463               	retlw	99	;'c'
   288  0049  3469               	retlw	105	;'i'
   289  004A  346F               	retlw	111	;'o'
   290  004B  346E               	retlw	110	;'n'
   291  004C  3420               	retlw	32	;' '
   292  004D  3464               	retlw	100	;'d'
   293  004E  3465               	retlw	101	;'e'
   294  004F  3473               	retlw	115	;'s'
   295  0050  3465               	retlw	101	;'e'
   296  0051  3461               	retlw	97	;'a'
   297  0052  3420               	retlw	32	;' '
   298  0053  3465               	retlw	101	;'e'
   299  0054  346A               	retlw	106	;'j'
   300  0055  3465               	retlw	101	;'e'
   301  0056  3463               	retlw	99	;'c'
   302  0057  3475               	retlw	117	;'u'
   303  0058  3474               	retlw	116	;'t'
   304  0059  3461               	retlw	97	;'a'
   305  005A  3472               	retlw	114	;'r'
   306  005B  343F               	retlw	63	;'?'
   307  005C  3420               	retlw	32	;' '
   308  005D  340D               	retlw	13
   309  005E  3400               	retlw	0
   310  005F                     STR_6:
   311  005F  340D               	retlw	13
   312  0060  3456               	retlw	86	;'V'
   313  0061  3461               	retlw	97	;'a'
   314  0062  346C               	retlw	108	;'l'
   315  0063  346F               	retlw	111	;'o'
   316  0064  3472               	retlw	114	;'r'
   317  0065  3420               	retlw	32	;' '
   318  0066  3470               	retlw	112	;'p'
   319  0067  3461               	retlw	97	;'a'
   320  0068  3472               	retlw	114	;'r'
   321  0069  3461               	retlw	97	;'a'
   322  006A  3420               	retlw	32	;' '
   323  006B  3465               	retlw	101	;'e'
   324  006C  346C               	retlw	108	;'l'
   325  006D  3420               	retlw	32	;' '
   326  006E  3470               	retlw	112	;'p'
   327  006F  3475               	retlw	117	;'u'
   328  0070  3465               	retlw	101	;'e'
   329  0071  3472               	retlw	114	;'r'
   330  0072  3474               	retlw	116	;'t'
   331  0073  346F               	retlw	111	;'o'
   332  0074  3420               	retlw	32	;' '
   333  0075  3441               	retlw	65	;'A'
   334  0076  340D               	retlw	13
   335  0077  3400               	retlw	0
   336  0078                     STR_7:
   337  0078  340D               	retlw	13
   338  0079  3456               	retlw	86	;'V'
   339  007A  3461               	retlw	97	;'a'
   340  007B  346C               	retlw	108	;'l'
   341  007C  346F               	retlw	111	;'o'
   342  007D  3472               	retlw	114	;'r'
   343  007E  3420               	retlw	32	;' '
   344  007F  3470               	retlw	112	;'p'
   345  0080  3461               	retlw	97	;'a'
   346  0081  3472               	retlw	114	;'r'
   347  0082  3461               	retlw	97	;'a'
   348  0083  3420               	retlw	32	;' '
   349  0084  3465               	retlw	101	;'e'
   350  0085  346C               	retlw	108	;'l'
   351  0086  3420               	retlw	32	;' '
   352  0087  3470               	retlw	112	;'p'
   353  0088  3475               	retlw	117	;'u'
   354  0089  3465               	retlw	101	;'e'
   355  008A  3472               	retlw	114	;'r'
   356  008B  3474               	retlw	116	;'t'
   357  008C  346F               	retlw	111	;'o'
   358  008D  3420               	retlw	32	;' '
   359  008E  3442               	retlw	66	;'B'
   360  008F  340D               	retlw	13
   361  0090  3400               	retlw	0
   362  0091                     STR_3:
   363  0091  3428               	retlw	40	;'('
   364  0092  3432               	retlw	50	;'2'
   365  0093  3429               	retlw	41	;')'
   366  0094  3420               	retlw	32	;' '
   367  0095  3443               	retlw	67	;'C'
   368  0096  3461               	retlw	97	;'a'
   369  0097  346D               	retlw	109	;'m'
   370  0098  3462               	retlw	98	;'b'
   371  0099  3469               	retlw	105	;'i'
   372  009A  3461               	retlw	97	;'a'
   373  009B  3472               	retlw	114	;'r'
   374  009C  3420               	retlw	32	;' '
   375  009D  3450               	retlw	80	;'P'
   376  009E  344F               	retlw	79	;'O'
   377  009F  3452               	retlw	82	;'R'
   378  00A0  3454               	retlw	84	;'T'
   379  00A1  3441               	retlw	65	;'A'
   380  00A2  3420               	retlw	32	;' '
   381  00A3  340D               	retlw	13
   382  00A4  3400               	retlw	0
   383  00A5                     STR_4:
   384  00A5  3428               	retlw	40	;'('
   385  00A6  3433               	retlw	51	;'3'
   386  00A7  3429               	retlw	41	;')'
   387  00A8  3420               	retlw	32	;' '
   388  00A9  3443               	retlw	67	;'C'
   389  00AA  3461               	retlw	97	;'a'
   390  00AB  346D               	retlw	109	;'m'
   391  00AC  3462               	retlw	98	;'b'
   392  00AD  3469               	retlw	105	;'i'
   393  00AE  3461               	retlw	97	;'a'
   394  00AF  3472               	retlw	114	;'r'
   395  00B0  3420               	retlw	32	;' '
   396  00B1  3450               	retlw	80	;'P'
   397  00B2  344F               	retlw	79	;'O'
   398  00B3  3452               	retlw	82	;'R'
   399  00B4  3454               	retlw	84	;'T'
   400  00B5  3442               	retlw	66	;'B'
   401  00B6  340D               	retlw	13
   402  00B7  3400               	retlw	0
   403  00B8                     STR_5:
   404  00B8  340D               	retlw	13
   405  00B9  3443               	retlw	67	;'C'
   406  00BA  3461               	retlw	97	;'a'
   407  00BB  3464               	retlw	100	;'d'
   408  00BC  3465               	retlw	101	;'e'
   409  00BD  346E               	retlw	110	;'n'
   410  00BE  3461               	retlw	97	;'a'
   411  00BF  3420               	retlw	32	;' '
   412  00C0  3465               	retlw	101	;'e'
   413  00C1  346E               	retlw	110	;'n'
   414  00C2  3476               	retlw	118	;'v'
   415  00C3  3469               	retlw	105	;'i'
   416  00C4  3461               	retlw	97	;'a'
   417  00C5  3464               	retlw	100	;'d'
   418  00C6  3461               	retlw	97	;'a'
   419  00C7  340D               	retlw	13
   420  00C8  340D               	retlw	13
   421  00C9  3400               	retlw	0
   422                           
   423                           	psect	cinit
   424  000F                     start_initialization:	
   425                           ; #config settings
   426                           
   427  000F                     __initialization:
   428                           
   429                           ; Clear objects allocated to COMMON
   430  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   431  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   432  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   433  0012                     end_of_initialization:	
   434                           ;End of C runtime variable initialization code
   435                           
   436  0012                     __end_of__initialization:
   437  0012  0183               	clrf	3
   438  0013  120A  118A  28CA   	ljmp	_main	;jump to C main() function
   439                           
   440                           	psect	bssCOMMON
   441  0078                     __pbssCOMMON:
   442  0078                     _cambio:
   443  0078                     	ds	1
   444  0079                     _dato:
   445  0079                     	ds	1
   446  007A                     _estado:
   447  007A                     	ds	1
   448                           
   449                           	psect	cstackCOMMON
   450  0070                     __pcstackCOMMON:
   451  0070                     ?_configuraciones:
   452  0070                     ?_sendString:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_rutinterrupcion:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ??_rutinterrupcion:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_main:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_send1dato:	
   465                           ; 1 bytes @ 0x0
   466                           
   467                           
   468                           ; 1 bytes @ 0x0
   469  0070                     	ds	3
   470  0073                     ??_configuraciones:
   471  0073                     ??_send1dato:	
   472                           ; 1 bytes @ 0x3
   473                           
   474  0073                     send1dato@dato:	
   475                           ; 1 bytes @ 0x3
   476                           
   477                           
   478                           ; 1 bytes @ 0x3
   479  0073                     	ds	1
   480  0074                     ??_sendString:
   481                           
   482                           ; 1 bytes @ 0x4
   483  0074                     	ds	1
   484  0075                     sendString@mensaje:
   485                           
   486                           ; 1 bytes @ 0x5
   487  0075                     	ds	1
   488  0076                     ??_main:
   489                           
   490                           ; 1 bytes @ 0x6
   491  0076                     	ds	2
   492                           
   493                           	psect	maintext
   494  00CA                     __pmaintext:	
   495 ;;
   496 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   497 ;;
   498 ;; *************** function _main *****************
   499 ;; Defined at:
   500 ;;		line 64 in file "main10.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;		None
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   509 ;; Tracked objects:
   510 ;;		On entry : B00/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   514 ;;      Params:         0       0       0       0       0
   515 ;;      Locals:         0       0       0       0       0
   516 ;;      Temps:          2       0       0       0       0
   517 ;;      Totals:         2       0       0       0       0
   518 ;;Total ram usage:        2 bytes
   519 ;; Hardware stack levels required when called:    3
   520 ;; This function calls:
   521 ;;		_configuraciones
   522 ;;		_sendString
   523 ;; This function is called by:
   524 ;;		Startup code after reset
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           
   529                           ;psect for function _main
   530  00CA                     _main:
   531  00CA                     l812:	
   532                           ;incstack = 0
   533                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   534                           
   535                           
   536                           ;main10.c: 66:     configuraciones();
   537  00CA  120A  118A  2151  120A  118A  	fcall	_configuraciones
   538  00CF  2935               	goto	l862
   539  00D0                     l814:
   540                           
   541                           ;main10.c: 77:                 sendString("\rQue accion desea ejecutar? \r");
   542  00D0  3026               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   543  00D1  120A  118A  2177  120A  118A  	fcall	_sendString
   544                           
   545                           ;main10.c: 78:                 sendString("(1) Desplegar cadena de caracteres \r");
   546  00D6  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   547  00D7  120A  118A  2177  120A  118A  	fcall	_sendString
   548                           
   549                           ;main10.c: 79:                 sendString("(2) Cambiar PORTA \r");
   550  00DC  3076               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   551  00DD  120A  118A  2177  120A  118A  	fcall	_sendString
   552                           
   553                           ;main10.c: 80:                 sendString("(3) Cambiar PORTB\r");
   554  00E2  308A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   555  00E3  120A  118A  2177  120A  118A  	fcall	_sendString
   556  00E8                     l816:
   557                           
   558                           ;main10.c: 81:                 estado = 20;
   559  00E8  3014               	movlw	20
   560  00E9  00F6               	movwf	??_main
   561  00EA  0876               	movf	??_main,w
   562  00EB  00FA               	movwf	_estado
   563                           
   564                           ;main10.c: 82:                 break;
   565  00EC  2935               	goto	l862
   566  00ED                     l818:
   567                           
   568                           ;main10.c: 84:                 sendString("\rCadena enviada\r\r");
   569  00ED  309D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   570  00EE  120A  118A  2177  120A  118A  	fcall	_sendString
   571  00F3                     l820:
   572                           
   573                           ;main10.c: 85:                 dato = 0;
   574  00F3  01F9               	clrf	_dato
   575  00F4                     l822:
   576                           
   577                           ;main10.c: 86:                 estado = 0;
   578  00F4  01FA               	clrf	_estado
   579                           
   580                           ;main10.c: 87:                 break;
   581  00F5  2935               	goto	l862
   582  00F6                     l824:
   583                           
   584                           ;main10.c: 89:                 cambio = 0;
   585  00F6  01F8               	clrf	_cambio
   586  00F7                     l826:
   587                           
   588                           ;main10.c: 90:                 sendString("\rValor para el puerto A\r");
   589  00F7  3044               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   590  00F8  120A  118A  2177  120A  118A  	fcall	_sendString
   591  00FD                     l828:	
   592                           ;main10.c: 91:                 while(!cambio);
   593                           
   594  00FD  0878               	movf	_cambio,w
   595  00FE  1903               	btfsc	3,2
   596  00FF  2901               	goto	u101
   597  0100  2902               	goto	u100
   598  0101                     u101:
   599  0101  28FD               	goto	l828
   600  0102                     u100:
   601  0102                     l830:
   602                           
   603                           ;main10.c: 92:                 PORTA = dato;
   604  0102  0879               	movf	_dato,w
   605  0103  1283               	bcf	3,5	;RP0=0, select bank0
   606  0104  1303               	bcf	3,6	;RP1=0, select bank0
   607  0105  0085               	movwf	5	;volatile
   608  0106  28F3               	goto	l820
   609  0107                     l836:
   610                           
   611                           ;main10.c: 97:                 cambio = 0;
   612  0107  01F8               	clrf	_cambio
   613  0108                     l838:
   614                           
   615                           ;main10.c: 98:                 sendString("\rValor para el puerto B\r");
   616  0108  305D               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   617  0109  120A  118A  2177  120A  118A  	fcall	_sendString
   618  010E                     l840:	
   619                           ;main10.c: 99:                 while(!cambio);
   620                           
   621  010E  0878               	movf	_cambio,w
   622  010F  1903               	btfsc	3,2
   623  0110  2912               	goto	u111
   624  0111  2913               	goto	u110
   625  0112                     u111:
   626  0112  290E               	goto	l840
   627  0113                     u110:
   628  0113                     l842:
   629                           
   630                           ;main10.c: 100:                 PORTB = dato;
   631  0113  0879               	movf	_dato,w
   632  0114  1283               	bcf	3,5	;RP0=0, select bank0
   633  0115  1303               	bcf	3,6	;RP1=0, select bank0
   634  0116  0086               	movwf	6	;volatile
   635  0117  28F3               	goto	l820
   636  0118                     l848:
   637                           
   638                           ;main10.c: 105:                 if(dato == '1') estado = 1;
   639  0118  3031               	movlw	49
   640  0119  0679               	xorwf	_dato,w
   641  011A  1D03               	btfss	3,2
   642  011B  291D               	goto	u121
   643  011C  291E               	goto	u120
   644  011D                     u121:
   645  011D  2920               	goto	l852
   646  011E                     u120:
   647  011E                     l850:
   648  011E  01FA               	clrf	_estado
   649  011F  0AFA               	incf	_estado,f
   650  0120                     l852:
   651                           
   652                           ;main10.c: 106:                 if(dato == '2') estado = 2;
   653  0120  3032               	movlw	50
   654  0121  0679               	xorwf	_dato,w
   655  0122  1D03               	btfss	3,2
   656  0123  2925               	goto	u131
   657  0124  2926               	goto	u130
   658  0125                     u131:
   659  0125  292A               	goto	l856
   660  0126                     u130:
   661  0126                     l854:
   662  0126  3002               	movlw	2
   663  0127  00F6               	movwf	??_main
   664  0128  0876               	movf	??_main,w
   665  0129  00FA               	movwf	_estado
   666  012A                     l856:
   667                           
   668                           ;main10.c: 107:                 if(dato == '3') estado = 3;
   669  012A  3033               	movlw	51
   670  012B  0679               	xorwf	_dato,w
   671  012C  1D03               	btfss	3,2
   672  012D  292F               	goto	u141
   673  012E  2930               	goto	u140
   674  012F                     u141:
   675  012F  2935               	goto	l56
   676  0130                     u140:
   677  0130                     l858:
   678  0130  3003               	movlw	3
   679  0131  00F6               	movwf	??_main
   680  0132  0876               	movf	??_main,w
   681  0133  00FA               	movwf	_estado
   682  0134  2935               	goto	l862
   683  0135                     l56:
   684  0135                     l862:
   685  0135  087A               	movf	_estado,w
   686  0136  00F6               	movwf	??_main
   687  0137  01F7               	clrf	??_main+1
   688                           
   689                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   690                           ; Switch size 1, requested type "simple"
   691                           ; Number of cases is 1, Range of values is 0 to 0
   692                           ; switch strategies available:
   693                           ; Name         Instructions Cycles
   694                           ; simple_byte            4     3 (average)
   695                           ; direct_byte           11     8 (fixed)
   696                           ; jumptable            260     6 (fixed)
   697                           ;	Chosen strategy is simple_byte
   698  0138  0877               	movf	??_main+1,w
   699  0139  3A00               	xorlw	0	; case 0
   700  013A  1903               	skipnz
   701  013B  293D               	goto	l888
   702  013C  2935               	goto	l56
   703  013D                     l888:
   704                           
   705                           ; Switch size 1, requested type "simple"
   706                           ; Number of cases is 5, Range of values is 0 to 20
   707                           ; switch strategies available:
   708                           ; Name         Instructions Cycles
   709                           ; simple_byte           16     9 (average)
   710                           ; direct_byte           71     8 (fixed)
   711                           ; jumptable            260     6 (fixed)
   712                           ;	Chosen strategy is simple_byte
   713  013D  0876               	movf	??_main,w
   714  013E  3A00               	xorlw	0	; case 0
   715  013F  1903               	skipnz
   716  0140  28D0               	goto	l814
   717  0141  3A01               	xorlw	1	; case 1
   718  0142  1903               	skipnz
   719  0143  28ED               	goto	l818
   720  0144  3A03               	xorlw	3	; case 2
   721  0145  1903               	skipnz
   722  0146  28F6               	goto	l824
   723  0147  3A01               	xorlw	1	; case 3
   724  0148  1903               	skipnz
   725  0149  2907               	goto	l836
   726  014A  3A17               	xorlw	23	; case 20
   727  014B  1903               	skipnz
   728  014C  2918               	goto	l848
   729  014D  2935               	goto	l56
   730  014E  120A  118A  280C   	ljmp	start
   731  0151                     __end_of_main:
   732                           
   733                           	psect	text1
   734  0177                     __ptext1:	
   735 ;; *************** function _sendString *****************
   736 ;; Defined at:
   737 ;;		line 152 in file "main10.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  mensaje         1    wreg     PTR unsigned char 
   740 ;;		 -> STR_7(25), STR_6(25), STR_5(18), STR_4(19), 
   741 ;;		 -> STR_3(20), STR_2(37), STR_1(30), 
   742 ;; Auto vars:     Size  Location     Type
   743 ;;  mensaje         1    5[COMMON] PTR unsigned char 
   744 ;;		 -> STR_7(25), STR_6(25), STR_5(18), STR_4(19), 
   745 ;;		 -> STR_3(20), STR_2(37), STR_1(30), 
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   755 ;;      Params:         0       0       0       0       0
   756 ;;      Locals:         1       0       0       0       0
   757 ;;      Temps:          1       0       0       0       0
   758 ;;      Totals:         2       0       0       0       0
   759 ;;Total ram usage:        2 bytes
   760 ;; Hardware stack levels used:    1
   761 ;; Hardware stack levels required when called:    2
   762 ;; This function calls:
   763 ;;		_send1dato
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           
   770                           ;psect for function _sendString
   771  0177                     _sendString:
   772                           
   773                           ;incstack = 0
   774                           ; Regs used in _sendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   775                           ;sendString@mensaje stored from wreg
   776  0177  00F5               	movwf	sendString@mensaje
   777  0178                     l804:
   778                           
   779                           ;main10.c: 153:     while(*mensaje != 0x00){
   780  0178  2989               	goto	l810
   781  0179                     l806:
   782                           
   783                           ;main10.c: 154:         send1dato(*mensaje);
   784  0179  0875               	movf	sendString@mensaje,w
   785  017A  0084               	movwf	4
   786  017B  120A  118A  2016  120A  118A  	fcall	stringdir
   787  0180  120A  118A  21AA  120A  118A  	fcall	_send1dato
   788  0185                     l808:
   789                           
   790                           ;main10.c: 155:         mensaje ++;
   791  0185  3001               	movlw	1
   792  0186  00F4               	movwf	??_sendString
   793  0187  0874               	movf	??_sendString,w
   794  0188  07F5               	addwf	sendString@mensaje,f
   795  0189                     l810:
   796                           
   797                           ;main10.c: 153:     while(*mensaje != 0x00){
   798  0189  0875               	movf	sendString@mensaje,w
   799  018A  0084               	movwf	4
   800  018B  120A  118A  2016  120A  118A  	fcall	stringdir
   801  0190  3A00               	xorlw	0
   802  0191  1D03               	skipz
   803  0192  2994               	goto	u91
   804  0193  2995               	goto	u90
   805  0194                     u91:
   806  0194  2979               	goto	l806
   807  0195                     u90:
   808  0195                     l90:
   809  0195  0008               	return
   810  0196                     __end_of_sendString:
   811                           
   812                           	psect	text2
   813  01AA                     __ptext2:	
   814 ;; *************** function _send1dato *****************
   815 ;; Defined at:
   816 ;;		line 147 in file "main10.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;  dato            1    wreg     unsigned char 
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  dato            1    3[COMMON] unsigned char 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   830 ;;      Params:         0       0       0       0       0
   831 ;;      Locals:         1       0       0       0       0
   832 ;;      Temps:          0       0       0       0       0
   833 ;;      Totals:         1       0       0       0       0
   834 ;;Total ram usage:        1 bytes
   835 ;; Hardware stack levels used:    1
   836 ;; Hardware stack levels required when called:    1
   837 ;; This function calls:
   838 ;;		Nothing
   839 ;; This function is called by:
   840 ;;		_sendString
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           
   845                           ;psect for function _send1dato
   846  01AA                     _send1dato:
   847                           
   848                           ;incstack = 0
   849                           ; Regs used in _send1dato: [wreg]
   850                           ;send1dato@dato stored from wreg
   851  01AA  00F3               	movwf	send1dato@dato
   852  01AB                     l682:
   853                           
   854                           ;main10.c: 148:     TXREG = dato;
   855  01AB  0873               	movf	send1dato@dato,w
   856  01AC  1283               	bcf	3,5	;RP0=0, select bank0
   857  01AD  1303               	bcf	3,6	;RP1=0, select bank0
   858  01AE  0099               	movwf	25	;volatile
   859  01AF                     l81:	
   860                           ;main10.c: 149:     while(!TXSTAbits.TRMT);
   861                           
   862  01AF  1683               	bsf	3,5	;RP0=1, select bank1
   863  01B0  1303               	bcf	3,6	;RP1=0, select bank1
   864  01B1  1C98               	btfss	24,1	;volatile
   865  01B2  29B4               	goto	u11
   866  01B3  29B5               	goto	u10
   867  01B4                     u11:
   868  01B4  29AF               	goto	l81
   869  01B5                     u10:
   870  01B5                     l84:
   871  01B5  0008               	return
   872  01B6                     __end_of_send1dato:
   873                           
   874                           	psect	text3
   875  0151                     __ptext3:	
   876 ;; *************** function _configuraciones *****************
   877 ;; Defined at:
   878 ;;		line 115 in file "main10.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   892 ;;      Params:         0       0       0       0       0
   893 ;;      Locals:         0       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0
   895 ;;      Totals:         0       0       0       0       0
   896 ;;Total ram usage:        0 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; Hardware stack levels required when called:    1
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		_main
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           
   907                           ;psect for function _configuraciones
   908  0151                     _configuraciones:
   909  0151                     l684:	
   910                           ;incstack = 0
   911                           ; Regs used in _configuraciones: [wreg+status,2+status,0]
   912                           
   913                           
   914                           ;main10.c: 116:     ANSEL = 0X00;
   915  0151  1683               	bsf	3,5	;RP0=1, select bank3
   916  0152  1703               	bsf	3,6	;RP1=1, select bank3
   917  0153  0188               	clrf	8	;volatile
   918                           
   919                           ;main10.c: 117:     ANSELH = 0X00;
   920  0154  0189               	clrf	9	;volatile
   921                           
   922                           ;main10.c: 118:     TRISA = 0X00;
   923  0155  1683               	bsf	3,5	;RP0=1, select bank1
   924  0156  1303               	bcf	3,6	;RP1=0, select bank1
   925  0157  0185               	clrf	5	;volatile
   926                           
   927                           ;main10.c: 119:     TRISB = 0X00;
   928  0158  0186               	clrf	6	;volatile
   929  0159                     l686:
   930                           
   931                           ;main10.c: 120:     TRISCbits.TRISC6 = 0;
   932  0159  1307               	bcf	7,6	;volatile
   933  015A                     l688:
   934                           
   935                           ;main10.c: 121:     TRISCbits.TRISC7 = 1;
   936  015A  1787               	bsf	7,7	;volatile
   937                           
   938                           ;main10.c: 122:     PORTA = 0X00;
   939  015B  1283               	bcf	3,5	;RP0=0, select bank0
   940  015C  1303               	bcf	3,6	;RP1=0, select bank0
   941  015D  0185               	clrf	5	;volatile
   942                           
   943                           ;main10.c: 123:     PORTB = 0X00;
   944  015E  0186               	clrf	6	;volatile
   945                           
   946                           ;main10.c: 124:     PORTC = 0X00;
   947  015F  0187               	clrf	7	;volatile
   948                           
   949                           ;main10.c: 126:     estado = 0;
   950  0160  01FA               	clrf	_estado
   951  0161                     l690:
   952                           
   953                           ;main10.c: 129:     OSCCONbits.IRCF = 0b111;
   954  0161  3070               	movlw	112
   955  0162  1683               	bsf	3,5	;RP0=1, select bank1
   956  0163  1303               	bcf	3,6	;RP1=0, select bank1
   957  0164  048F               	iorwf	15,f	;volatile
   958  0165                     l692:
   959                           
   960                           ;main10.c: 130:     OSCCONbits.SCS = 0b1;
   961  0165  140F               	bsf	15,0	;volatile
   962  0166                     l694:
   963                           
   964                           ;main10.c: 133:     INTCONbits.GIE = 1;
   965  0166  178B               	bsf	11,7	;volatile
   966  0167                     l696:
   967                           
   968                           ;main10.c: 134:     INTCONbits.PEIE = 1;
   969  0167  170B               	bsf	11,6	;volatile
   970  0168                     l698:
   971                           
   972                           ;main10.c: 135:     PIE1bits.RCIE = 1;
   973  0168  168C               	bsf	12,5	;volatile
   974  0169                     l700:
   975                           
   976                           ;main10.c: 138:     SPBRG = 12;
   977  0169  300C               	movlw	12
   978  016A  0099               	movwf	25	;volatile
   979  016B                     l702:
   980                           
   981                           ;main10.c: 139:     TXSTAbits.BRGH = 0;
   982  016B  1118               	bcf	24,2	;volatile
   983  016C                     l704:
   984                           
   985                           ;main10.c: 140:     TXSTAbits.TXEN = 1;
   986  016C  1698               	bsf	24,5	;volatile
   987  016D                     l706:
   988                           
   989                           ;main10.c: 141:     RCSTAbits.CREN = 1;
   990  016D  1283               	bcf	3,5	;RP0=0, select bank0
   991  016E  1303               	bcf	3,6	;RP1=0, select bank0
   992  016F  1618               	bsf	24,4	;volatile
   993  0170                     l708:
   994                           
   995                           ;main10.c: 142:     TXSTAbits.SYNC = 0;
   996  0170  1683               	bsf	3,5	;RP0=1, select bank1
   997  0171  1303               	bcf	3,6	;RP1=0, select bank1
   998  0172  1218               	bcf	24,4	;volatile
   999  0173                     l710:
  1000                           
  1001                           ;main10.c: 143:     RCSTAbits.SPEN = 1;
  1002  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1003  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1004  0175  1798               	bsf	24,7	;volatile
  1005  0176                     l78:
  1006  0176  0008               	return
  1007  0177                     __end_of_configuraciones:
  1008                           
  1009                           	psect	text4
  1010  0196                     __ptext4:	
  1011 ;; *************** function _rutinterrupcion *****************
  1012 ;; Defined at:
  1013 ;;		line 56 in file "main10.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;		None
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;		None
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		wreg
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1027 ;;      Params:         0       0       0       0       0
  1028 ;;      Locals:         0       0       0       0       0
  1029 ;;      Temps:          3       0       0       0       0
  1030 ;;      Totals:         3       0       0       0       0
  1031 ;;Total ram usage:        3 bytes
  1032 ;; Hardware stack levels used:    1
  1033 ;; This function calls:
  1034 ;;		Nothing
  1035 ;; This function is called by:
  1036 ;;		Interrupt level 1
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           
  1041                           ;psect for function _rutinterrupcion
  1042  0196                     _rutinterrupcion:
  1043  0196                     i1l720:
  1044                           
  1045                           ;main10.c: 57:     if(PIR1bits.RCIF){
  1046  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1047  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1048  0198  1E8C               	btfss	12,5	;volatile
  1049  0199  299B               	goto	u3_21
  1050  019A  299C               	goto	u3_20
  1051  019B                     u3_21:
  1052  019B  29A3               	goto	i1l50
  1053  019C                     u3_20:
  1054  019C                     i1l722:
  1055                           
  1056                           ;main10.c: 58:         dato = RCREG;
  1057  019C  081A               	movf	26,w	;volatile
  1058  019D  00F0               	movwf	??_rutinterrupcion
  1059  019E  0870               	movf	??_rutinterrupcion,w
  1060  019F  00F9               	movwf	_dato
  1061  01A0                     i1l724:
  1062                           
  1063                           ;main10.c: 59:         PIR1bits.RCIF = 0;
  1064  01A0  128C               	bcf	12,5	;volatile
  1065  01A1                     i1l726:
  1066                           
  1067                           ;main10.c: 60:         cambio = 1;
  1068  01A1  01F8               	clrf	_cambio
  1069  01A2  0AF8               	incf	_cambio,f
  1070  01A3                     i1l50:
  1071  01A3  0872               	movf	??_rutinterrupcion+2,w
  1072  01A4  008A               	movwf	10
  1073  01A5  0E71               	swapf	??_rutinterrupcion+1,w
  1074  01A6  0083               	movwf	3
  1075  01A7  0EFE               	swapf	btemp,f
  1076  01A8  0E7E               	swapf	btemp,w
  1077  01A9  0009               	retfie
  1078  01AA                     __end_of_rutinterrupcion:
  1079  007E                     btemp	set	126	;btemp
  1080  007E                     wtemp0	set	126
  1081                           
  1082                           	psect	intentry
  1083  0004                     __pintentry:	
  1084                           ;incstack = 0
  1085                           ; Regs used in _rutinterrupcion: [wreg]
  1086                           
  1087  0004                     interrupt_function:
  1088  007E                     saved_w	set	btemp
  1089  0004  00FE               	movwf	btemp
  1090  0005  0E03               	swapf	3,w
  1091  0006  00F1               	movwf	??_rutinterrupcion+1
  1092  0007  080A               	movf	10,w
  1093  0008  00F2               	movwf	??_rutinterrupcion+2
  1094  0009  120A  118A  2996   	ljmp	_rutinterrupcion
  1095                           
  1096                           	psect	config
  1097                           
  1098                           ;Config register CONFIG1 @ 0x2007
  1099                           ;	Oscillator Selection bits
  1100                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1101                           ;	Watchdog Timer Enable bit
  1102                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1103                           ;	Power-up Timer Enable bit
  1104                           ;	PWRTE = OFF, PWRT disabled
  1105                           ;	RE3/MCLR pin function select bit
  1106                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1107                           ;	Code Protection bit
  1108                           ;	CP = OFF, Program memory code protection is disabled
  1109                           ;	Data Code Protection bit
  1110                           ;	CPD = OFF, Data memory code protection is disabled
  1111                           ;	Brown Out Reset Selection bits
  1112                           ;	BOREN = OFF, BOR disabled
  1113                           ;	Internal External Switchover bit
  1114                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1115                           ;	Fail-Safe Clock Monitor Enabled bit
  1116                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1117                           ;	Low Voltage Programming Enable bit
  1118                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1119                           ;	In-Circuit Debugger Mode bit
  1120                           ;	DEBUG = 0x1, unprogrammed default
  1121  2007                     	org	8199
  1122  2007  20F4               	dw	8436
  1123                           
  1124                           ;Config register CONFIG2 @ 0x2008
  1125                           ;	Brown-out Reset Selection bit
  1126                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1127                           ;	Flash Program Memory Self Write Enable bits
  1128                           ;	WRT = OFF, Write protection off
  1129  2008                     	org	8200
  1130  2008  3FFF               	dw	16383

Data Sizes:
    Strings     174
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sendString@mensaje	PTR unsigned char  size(1) Largest target is 37
		 -> STR_7(CODE[25]), STR_6(CODE[25]), STR_5(CODE[18]), STR_4(CODE[19]), 
		 -> STR_3(CODE[20]), STR_2(CODE[37]), STR_1(CODE[30]), 


Critical Paths under _main in COMMON

    _main->_sendString
    _sendString->_send1dato

Critical Paths under _rutinterrupcion in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _rutinterrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutinterrupcion in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutinterrupcion in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutinterrupcion in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     291
                                              6 COMMON     2     2      0
                    _configuraciones
                         _sendString
 ---------------------------------------------------------------------------------
 (1) _sendString                                           2     2      0     291
                                              4 COMMON     2     2      0
                          _send1dato
 ---------------------------------------------------------------------------------
 (2) _send1dato                                            1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configuraciones                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _rutinterrupcion                                      3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configuraciones
   _sendString
     _send1dato

 _rutinterrupcion (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue May 04 09:42:01 2021

                       pc 0002                        l56 0135                        l81 01AF  
                      l90 0195                        l84 01B5                        l78 0176  
                      u10 01B5                        u11 01B4                        u90 0195  
                      u91 0194                        fsr 0004                       l700 0169  
                     l710 0173                       l702 016B                       l704 016C  
                     l706 016D                       l810 0189                       l708 0170  
                     l804 0178                       l820 00F3                       l812 00CA  
                     l806 0179                       l830 0102                       l822 00F4  
                     l814 00D0                       l808 0185                       l840 010E  
                     l824 00F6                       l816 00E8                       l690 0161  
                     l682 01AB                       l850 011E                       l842 0113  
                     l826 00F7                       l818 00ED                       l692 0165  
                     l684 0151                       l852 0120                       l836 0107  
                     l828 00FD                       l694 0166                       l686 0159  
                     l854 0126                       l838 0108                       l862 0135  
                     l696 0167                       l688 015A                       l856 012A  
                     l848 0118                       l698 0168                       l858 0130  
                     l888 013D                       u100 0102                       u101 0101  
                     u110 0113                       u111 0112                       u120 011E  
                     u121 011D                       u130 0126                       u131 0125  
                     u140 0130                       u141 012F                       fsr0 0004  
                    STR_1 0041                      STR_2 001C                      STR_3 0091  
                    STR_4 00A5                      STR_5 00B8                      STR_6 005F  
                    STR_7 0078                      i1l50 01A3                      u3_20 019C  
                    u3_21 019B                      _dato 0079                      _main 00CA  
                    btemp 007E          ?_configuraciones 0070                      start 000C  
                   ?_main 0070                     _ANSEL 0188                     i1l720 0196  
                   i1l722 019C                     i1l724 01A0                     i1l726 01A1  
                   _RCREG 001A                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _TRISA 0085  
                   _TRISB 0086                     _TXREG 0019         ??_rutinterrupcion 0070  
           send1dato@dato 0073                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 000F              __end_of_main 0151  
                  ??_main 0076                    _ANSELH 0189                    _cambio 0078  
                  _estado 007A                    saved_w 007E   __end_of__initialization 0012  
          __pcstackCOMMON 0070        __size_of_send1dato 000C                __pmaintext 00CA  
         _rutinterrupcion 0196                __pintentry 0004                __stringtab 0016  
__size_of_configuraciones 0026                   __ptext1 0177                   __ptext2 01AA  
                 __ptext3 0151                   __ptext4 0196         __end_of_send1dato 01B6  
    end_of_initialization 0012                _sendString 0177   __end_of_rutinterrupcion 01AA  
               _RCSTAbits 0018                 _TRISCbits 0087                 _TXSTAbits 0098  
       ??_configuraciones 0073       start_initialization 000F               ?_sendString 0070  
        ?_rutinterrupcion 0070               __pbssCOMMON 0078                 ___latbits 0002  
               __pstrings 0016       __size_of_sendString 001F                 _send1dato 01AA  
       interrupt_function 0004         sendString@mensaje 0075                  _PIE1bits 008C  
                _PIR1bits 000C               __stringbase 001B                ?_send1dato 0070  
         _configuraciones 0151        __end_of__stringtab 001C              ??_sendString 0074  
           __size_of_main 0087        __end_of_sendString 0196                _INTCONbits 000B  
                intlevel1 0000               ??_send1dato 0073   __end_of_configuraciones 0177  
               stringcode 0016                _OSCCONbits 008F  __size_of_rutinterrupcion 0014  
                stringdir 0016                  stringtab 0016  
